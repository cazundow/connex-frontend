{"ast":null,"code":"var _jsxFileName = \"/Users/dominator/Documents/playground/connex-frontend/src/components/timestamps.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from './loader';\nimport base64 from 'base-64';\nimport './css/timestamps.css';\n\nconst Timestamps = props => {\n  const [timeStamps, setTimeStamps] = useState([]);\n  const [err, setErr] = useState(false);\n  const [diffence, setDiffence] = useState(\"\");\n  const [loading, setLoading] = useState(false); // getTime();\n\n  useEffect(() => {\n    getTime();\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      getTime();\n    }, 30000);\n  }, [timeStamps]);\n  const t = timeStamps.map((item, i) => {\n    let date = new Date(item);\n    let niceDate = date.toLocaleString();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }\n    }, item), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }\n    }, diffence));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timestmps_wrap col-xs-12 col-sm-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }) : t);\n\n  async function getTime() {\n    setLoading(true);\n    let response = await fetch('http://localhost:3001', {\n      headers: new Headers({\n        method: 'get',\n        \"Authorization\": 'Basic ' + base64.encode('' + \":\" + 'mysecrettoken')\n      })\n    });\n    let time = await response.json();\n\n    if (time.status != 200) {\n      setErr(true);\n    }\n\n    const newState = [...timeStamps, time.time];\n    setTimeStamps(newState);\n    setLoading(false);\n    calcDiff(time.time);\n  }\n\n  function calcDiff(date) {\n    setInterval(() => {\n      let ct = Date.now();\n      let dif = ct - date;\n      var days = Math.floor(dif / (1000 * 60 * 60 * 24));\n      var hours = Math.floor(dif % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      var minutes = Math.floor(dif % (1000 * 60 * 60) / (1000 * 60));\n      var seconds = Math.floor(dif % (1000 * 60) / 1000);\n      console.log(hours, minutes, seconds);\n      setDiffence(`'${hours < 10 ? '0' : ''}${hours}:${minutes}:${seconds}'`);\n    }, 1000);\n  }\n};\n\nTimestamps.propTypes = {};\nexport default Timestamps;","map":{"version":3,"sources":["/Users/dominator/Documents/playground/connex-frontend/src/components/timestamps.js"],"names":["React","useState","useEffect","PropTypes","Loader","base64","Timestamps","props","timeStamps","setTimeStamps","err","setErr","diffence","setDiffence","loading","setLoading","getTime","setTimeout","t","map","item","i","date","Date","niceDate","toLocaleString","response","fetch","headers","Headers","method","encode","time","json","status","newState","calcDiff","setInterval","ct","now","dif","days","Math","floor","hours","minutes","seconds","console","log","propTypes"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport Loader from './loader'; \nimport base64 from 'base-64';\n\nimport './css/timestamps.css'\n\nconst Timestamps = props => {\n    const [timeStamps, setTimeStamps] = useState([]); \n    const [err, setErr] = useState(false); \n    const [diffence, setDiffence] = useState(\"\"); \n    const [loading, setLoading] = useState(false); \n    // getTime();\n    useEffect(() => {\n        getTime();\n    }, [])\n\n\n    useEffect(() => {\n        setTimeout(()=>{\n            getTime();\n        }, 30000)\n       \n    }, [timeStamps])\n     const t= timeStamps\n     .map( (item, i) =>{\n         let date = new Date(item)\n         let niceDate = date.toLocaleString(); \n        \n       \n     return <div  key={i} >\n                 <p className=\"time\">{item}</p>\n                 <p>{diffence}</p>\n             </div>\n     \n     })\n\n    return (\n        <div className=\"timestmps_wrap col-xs-12 col-sm-6\">\n            \n            { loading ? <Loader />  : t}\n        </div>\n    )\n    \n    async function getTime(){\n        setLoading(true);\n       let response =  await fetch('http://localhost:3001', {\n        headers: new Headers({\n            method: 'get', \n            \"Authorization\":'Basic ' + base64.encode('' + \":\" + 'mysecrettoken') \n          })\n       }); \n        let time = await response.json();\n         if(time.status != 200) {\n            setErr(true)\n         }\n         const newState =  [...timeStamps, time.time]\n         \n         setTimeStamps(newState);\n         setLoading(false);\n         calcDiff(time.time);\n    }\n     function calcDiff(date) {\n\n        setInterval(() => {\n            let ct = Date.now(); \n            let dif = (ct - date);\n            var days = Math.floor(dif / (1000 * 60 * 60 * 24));\n            var hours = Math.floor((dif % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            var minutes = Math.floor((dif % (1000 * 60 * 60)) / (1000 * 60));\n            var seconds = Math.floor((dif % (1000 * 60)) / 1000);\n            console.log(hours,minutes,seconds)\n            setDiffence(`'${hours<10?'0':''}${hours}:${minutes}:${seconds}'`);\n        }, 1000);\n             \n    }\n}\n\nTimestamps.propTypes = {\n\n}\n\nexport default Timestamps\n"]},"metadata":{},"sourceType":"module"}